{
  "hash": "2e826bfaa7c5a3c1e71e41a39cccfc66",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Validación de los cálculos de incertidumbre en química analítica con el método Monte Carlo. Parte II\ndate: '2017-09-23'\nlastmod: '2022-03-26T12:55:52-03:00'\n---\n\n\nEn el \n[post anterior](https://www.analytical.cl/post/validacion-calculos-incertidumbre-quimica-analitica-metodo-monte-carlo/) \ndescribimos brevemente en qué consiste el método de\nMonte Carlo y cómo utilizarlo para estimar la incertidumbre de medición. \nFinalizamos comparando la estimación de acuerdo a la guía GUM con el método de \nMonte Carlo siguiendo estrictamente las directrices del test de diferencias\nnuméricas propuesto por el Suplmento 1 de la GUM.\n\nLlevamos a cabo el test de validación \"a mano\", es decir, ingresamos\ntodas las instrucciones en código `R`. Si bien no fue difícil, existen librerías\nespecializadas en `R` que permiten realizar todos los cálculos de \nincertidumbre y validarlos utilizando funciones ya incorporadas.\n\nEn `R`existen dos librerías especializadas en cálculo de incertidumbre de \nmétodos de medición físico-químicos:\n\n- `metRology` desarrollada en conjunto entre los Institutos Nacionales de \nMetrología del Reino Unido (LGC) y de Estados Unidos (NIST). Es mantenida \npor Steve Ellison, el autor de la guía GUM. Puede encontrar más información \n[aquí](https://www.nist.gov/programs-projects/metrology-software-project).\n\n- `propagate` desarrollada por Andrej-Nikolai Spiess \n\nMe inclinaré por `metRology` principalmente porque tiene el soporte de los \ndos centros de metrología más imporantes a nivel mundial y, ya que fue \ndesarrollada en sus inicios por Steve Ellison, tiene un pequeño sesgo hacia la \nmetrología química.\n\n## Ejemplo de validación de cálculos con librería `metRology`\n\nDesarrollaremos un ejemplo más extenso sobre cálculo de incertidumbre en \nquímica analítica utilizando esta librería. Iremos paso a paso, cualquier\nduda en la implementación nada más escríbala en los comentarios más \nabajo. Sin embargo, no detallaremos cómo obtener las incertidumbres de\ncada uno de los factores involucrados en la ecuación de medición, sino\nque simplemente será un dato conocido para este ejemplo. En \nun futuro post, desarollaremos un ejemplo completo de principio a fin, por ahora\nnos centraremos en utilizar `metRology`como herramienta práctica.\n\nEn este ejemplo, calcularemos la incertidumbre de un método de determinación\nde cobre en mineral de cobre, con digestión ácida y cuantificación mediante\nespetroscopía de abosrción atómica AAS. Los detalles del método analítico \nestán fuera del alcance de este post, pero pueden ser consultados en la \nnorma chilena NCh 3392:2016.\n\n> Seguiremos estrictamente las directrices de la GUM, por lo tanto, queda \nfuera de esta evaluación cualquier corrección de sesgo y/o recuperación. La \ndiscusión sobre si se debiera, o no, incorporar el sesgo en la incertidumbre \nes un tema que abordaremos en otro post. \n\n1. El primer paso para estimar la incertidumbre de este método es escribir la\necuación de medición:\n\n\\begin{equation}\n  \\text{Cu}[\\text{%}]=\\frac{\\text{C}_{\\text{calib}}\\cdot V \\cdot D}{m\\cdot 10000}\n  (\\#eq:medicion)\n\\end{equation}\n\ndonde $\\text{C}_{\\text{calib}}$ es la concentración de la muestra digerida \ninterpolada en la curva de calibración $[\\mu\\text{g}\\,\\text{mL}^{-1}]$, $m$ es \nla masa de la muestra [g], $V\\,[\\text{mL}]$ es el volumen del aforo final y $D$ \nes un factor de dilución volumétrico, utilizado cuando es necesario. Para \nsimplificar el problema, asumiremos que no hay dilución antes de la lectura\npor AAS, por lo tanto, $D = 1$ y $u_{D} = 0$.\n\n2. Identificación de las fuentes de incertidumbre\n\nA continuación se enumeran las fuentes de incertidumbre asociadas a cada uno de \nlos factores de la ecuación \\@ref(eq:medicion) y se describe brevemente los \nmétodos estadísticos y de juicio experto utilizados para obtener las \nincertidumbres \nestándar correpospondientes:\n\n- $\\text{C}_{\\text{calib}}$: La incertidumbre estándar de la concentración de \nuna muestra problema $u_{\\text{C}_\\text{calib}}$ obtenida de una curva de \ncalibración \nlineal $y = a + bx$ es calculada a partir de la siguiente expresión:\n\n\\begin{equation}\nu_{\\text{C}_{\\text{calib}}}=\\frac{s_{y/x}}{b}\\sqrt{\\frac{1}{m}+\\frac{1}{n}+\n\\frac{(C_{\\text{calib}}-\\overline{C})^2}{\\sum(C_{i}-\\overline{C})^2}}\n\\label{eq:ucurva}\n\\end{equation}\n\ndonde $s_{y/x}$ es la desviación estándar de la regresión, $m$ es el número de \nreplicados independientes de la muestra problema efectivamente analizados, $n$ \nes el número de calibrantes, $C_{\\text{calib}}$ es la concentración de la \nmuestra problema obtenida por interpolación en la curva de calibración, \n$\\overline{C}$ \nes el promedio de la concentraciones de los calibrantes. Estos parámetros pueden \nser obtenidos directamente del análisis estadístico de la curva de calibración \nlineal. Cabe destacar que cuando se utiliza el método de mínimos cuadrados \nordinarios para estimar la pendiente e intercepto de la curva, esta metodología \nno incorpora la incertirtumbre de la concentración de los calibrantes. \n\n{{% callout warning %}}\nPuede profundizar sobre la incertidumbre de calibración en el siguiente\n[post](https://www.analytical.cl/post/como-calcular-la-incertidumbre-de-una-curva-de-calibracion/){{% /callout %}}\n\n\n- $V$: La incertidumbre del volumen de aforo $u_{\\text{V}}$ es estimada a partir \nde la combinación de tres  fuentes:\n\n    + $u_{\\text{tol}}$ La incertidumbre informada por el fabricante en el \n    certificado original del lote de producción o aquella impresa en el material \n    de vidrio. Esta incertidumbre es de Tipo B.\n  \n    + $u_{\\text{rep}}$ Incertidumbre debido a la repetibilidad de llenado del \n    aforo del material de vidrio. Esta incertidumbre (Tipo A) es evaluada \n    mediante métodos estadísticos a través de la replicación ($n$) del llenado \n    del material con agua destilada y el registro gravimétrico de la cantidad \n    de agua. La incertidumbre estándar se expresa como la desviación estándar \n    de los $n$ \n    replicados.\n  \n    + $u_{\\text{temp}}$ La incertidumbre debido a la diferencia de temperatura \n    registrada durante la calibración del material de vidrio y aquella que se \n    registra durante los análisis de rutina. Esta incertidumbre expandida es \n    expresada en la \n    ecuación \\@ref(eq:uvol):\n\n\\begin{equation}\n  U_{\\text{temp}}= V\\cdot \\gamma_{\\text{H}_{2}\\text{O}} \\cdot \\Delta T\n  (\\#eq:uvol)\n\\end{equation}\n\ndonde $V$ es el volumen certificado del material de vidrio, \n$\\gamma_{\\text{H}_{2}\\text{O}} = 2.1\\cdot 10^{-4}\\,\\text{°C}^{-1}$ es el \ncoeficiente de expansión del agua y $\\Delta T$ es la variabilidad de la \ntemperatura de trabajo del laboratorio en relación a la tempreratura de \ncalibración del material. Finalmente, se obtiene asume una distribución \nrectangular de la variable \\emph{Temperatura} obteniéndose una incertidumbre \nestándar $u_{\\text{temp}}=U_{\\text{temp}}/\\sqrt{3}$ mL.\n  \nEsta expresión debe utilizarse cuando exista un certificado de calibración que \ninforme la temperatura de referencia registrada durante el proceso de \ncertificación el cual puede provenir del mismo fabricante o de alguna institución \nmetrológica nacional que certifique este tipo material. Generalmente la \ntemperatura de calibración se espcifica a 20°C.\n\nLa incertidumbre combinada estándar del volumen del aforo se obtiene a través \nde la siguiente expresión:\n\n\\begin{equation}\nu_{\\text{V}} = \\sqrt{u_{\\text{tol}}^2+u_{\\text{rep}}^2+u_{\\text{temp}}^2} \n\\end{equation}\n\n- $m$ : La incertidudmbre de la masa de la muestra es obtenida directamente del \ncertificado de la balanza emitido por el nodo de metrología física nacional u \notro proveedor de calibración.\n  \n3. Cuantificación de los componentes de incertidumbre\n\nComo mencionamos anteriormente, no llevaremos a cabo la estimación de \nincertidumbre de cada uno de lo componentes, sino que asumiremos que estos\ndatos ya están disponibles. Dedicaremos otro post a desarrollar un ejemplo \ncompleto de principio a fin.\n\n4. Cálculo de la incertidumbre combinada total\n\nAplicando las directrices de la GUM y en base a la ecuación de medición \n\\@ref(eq:medicion), la incertidumbre estándar de la concentración de Cu por\neste método analítico es obtenida a partir de:\n\n\\begin{equation}\nu_{\\text{Cu}} = \\text{Cu}\\sqrt{\\left(\\frac{u_{\\text{C}_\\text{calib}}}{\\text{C}_{\\text{calib}}}\\right)^2+\n\\left(\\frac{u_{\\text{m}}}{m}\\right)^2+\n\\left(\\frac{u_{\\text{V}}}{V}\\right)^2}\n(\\#eq:ufinal)\n\\end{equation}\n\nLa tabla \\@ref(tab:udata) muestra las incertidumbres estándares de cada\nuno de los componentes de la ecuación \\@ref(eq:ufinal):\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>Valores e incertidumbres estándar de cada componente</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Componente </th>\n   <th style=\"text-align:left;\"> Valor </th>\n   <th style=\"text-align:left;\"> u </th>\n   <th style=\"text-align:left;\"> Unidades </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Concentracion calibracion </td>\n   <td style=\"text-align:left;\"> 13.82 </td>\n   <td style=\"text-align:left;\"> 0.24 </td>\n   <td style=\"text-align:left;\"> ug/mL </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Volumen aforo </td>\n   <td style=\"text-align:left;\"> 250.00 </td>\n   <td style=\"text-align:left;\"> 0.14 </td>\n   <td style=\"text-align:left;\"> mL </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Masa muestra </td>\n   <td style=\"text-align:left;\"> 0.99160 </td>\n   <td style=\"text-align:left;\"> 0.00005 </td>\n   <td style=\"text-align:left;\"> g </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nOk, vamos entonces a utilizar la librería `metRology` para evaluar la \nincertidumbre del % de Cu.\n\n\n{{% callout warning %}}\nDebe, en primer lugar, instalar la librería mediante el \ncomando `install.packages('metRology')`{{% /callout %}}\n\nUna vez instalada debe ingresar el siguiente código `R`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(metRology)  # Carga la librería metRology\n\n# Ingresar los valores de cada variable input (Tabla 1)\n\nCu.calib <- 13.82 # Concentración interpolada en la curva de calibración [ug/mL]\nV <- 250          # Volumen de aforo [mL]\nm <- 0.9916       # Masa de la muestra [g]\nD <- 1            # Factor de dilución (D = 1 implica no hay dilución)\n\n# Ingresar las incertidumbres estándar de cada variable input (Tabla 1)\n# Se mantienen, obviamente, las mismas unidades\n\nu.Cu.calib <- 0.24\nu.V <- 0.14\nu.m <- 0.00005\nu.D <- 0\n\n# Ingresamos la ecuación de medición y la guardamos con el nombre C.Cu\n# mediante el comando 'expression'\n\nC.Cu <- expression(Cu.calib*V*D/(m*10000))\n\n# Guardemos en una lista los valores de cada variable input, la llamaremos\n# x.Cu\n\nx.Cu <- list(Cu.calib = Cu.calib, V = V , D = D, m = m)\n\n# Guardemos en un vector las incertidumbres estándares de cada variable input\n# ¡¡en el mismo orden que fueron ingresadas en x.Cu!!\n# Llamaremos a este vector u.x.Cu\n\nu.x.Cu <- c(u.Cu.calib, u.V, u.D, u.m)\n```\n:::\n\n\n¡Estamos listos! Ahora `metRology`hará todo el trabajo con el comando `uncert`, Ud. debe elegir cuál método de estimación desea utilizar, las opciones son:\n\n- GUM\n- Monte Carlo\n- Kragten: Método numérico basado en una aproximación de las derivadas\nparciales propuestas por GUM. Es una excelente alternativa y muy sencilla de \nimplementar en Excel también.\n- NUM y k2 son otras aproximaciones numéricas de derivadas parciales.\n\n\n1. Cálculo de incertidumbre de acuerdo a GUM:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ingresamos ¡en este orden! los siguientes parámetros del comando uncert\n# Ecuación de medición C.Cu\n# Lista de valores inputs x.Cu\n# Vector de incertidumbres estándar u.x.Cu\n# ¿Con cuál método quiere calcular la incertidumbre? En este caso GUM\n\nu.Cu.GUM <- uncert(C.Cu, x.Cu, u.x.Cu, method = 'GUM')\n```\n:::\n\n\nLa información que entrega `uncert`es muy completa, sin embargo, para nuestro\npropósito sólo debemos fijarnos en el resultado que aparece al final del\nanálisis, es decir: $y = 0.3484268$ % Cu y $u(y) = 0.006054$ % Cu.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\nUncertainty evaluation\n\nCall:\n  uncert.expression(obj = C.Cu, x = x.Cu, u = u.x.Cu, method = \"GUM\")\n\nExpression: Cu.calib * V * D/(m * 10000)\n\nEvaluation method:  GUM \n\nUncertainty budget:\n         x        u       c            u.c          \nCu.calib  13.8200 0.24000  0.025211779  6.050827e-03\nV        250.0000 0.14000  0.001393707  1.951190e-04\nD          1.0000 0.00000  0.348426785  0.000000e+00\nm          0.9916 0.00005 -0.351378363 -1.756892e-05\n\n   y:  0.3484268\nu(y):  0.006053998 \n```\n\n\n:::\n:::\n\n\nAdemás de los cálculos de incertidumbre, la opción `method = 'GUM'` entrega\n4 gráficos muy interesantes, siendo el más importante el de \n_Contribuciones combinadas_, el cual se muestra en la figura \\@ref(fig:plotGUM). \nEn este gráfico queda en evidencia que el factor que más aporta a la \nincertidumbre total (evaluada por GUM) es la curva de calibración.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Gráfico de contribución a la incertidumbre total](index_files/figure-html/plotGUM-1.png){width=672}\n:::\n:::\n\n\n\n2. Cálculo de incertidumbre de acuerdo a Monte Carlo:\n\nEsencialmente es el mismo comando que utilizamos para GUM, sólo que \nseleccionaremos `method = 'MC'`. Sin embargo, este método tiene varias \nopciones adicionales muy interesantes:\n\n- Con la opción `distrib` Ud. puede asignar a cada variable su respectiva \ndistribución de probabilidad: Normal, uniforme, triangular o Student. Por \ndefecto, asume que todas son normales. \n\n- Con la opción `B` indica el número de simulaciones. Por defecto `B = 200`. Le sugiero cambiar a `B = 10000`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Guardaremos los cálculos en el objeto u.Cu.MC\n\nset.seed(123) # Sólo para que Ud. obtenga los mismos resultados\n\nu.Cu.MC <- uncert(C.Cu, x.Cu, u.x.Cu, method = 'MC', B = 10000)\n```\n:::\n\n\nEl método de Monte Carlo entrega el siguiente análisis:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\nUncertainty evaluation\n\nCall:\n  uncert.expression(obj = C.Cu, x = x.Cu, u = u.x.Cu, method = \"MC\",     B = 10000)\n\nExpression: Cu.calib * V * D/(m * 10000)\n\nEvaluation method:  MC \n\nBudget:\n         x        u       c            u.c           distrib\nCu.calib  13.8200 0.24000  0.025211842  6.050842e-03 norm   \nV        250.0000 0.14000  0.001393355  1.950696e-04 norm   \nD          1.0000 0.00000           NA            NA norm   \nm          0.9916 0.00005 -0.351680471 -1.758402e-05 norm   \n         distrib.pars         \nCu.calib mean=13.82, sd=0.24  \nV        mean=250, sd=0.14    \nD        mean=1, sd=0         \nm        mean=0.9916, sd=5e-05\n\n   y:  0.3484268\nu(y):  0.006046603 \n\nMonte Carlo evaluation using 10000 replicates:\n\n   y:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.3252  0.3444  0.3484  0.3484  0.3525  0.3720 \n```\n\n\n:::\n:::\n\n\nEl MMC obtiene\n$y = 0.3484268$ % Cu y $u(y) = 0.0060466$ % Cu.\n\nLa tabla \\@ref(tab:comparacion) muestra la comparación de ambas\naproximaciones en la estimación de la incertidumbre estándar:\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n<caption>Cuadro comparativo GUM v/s Monte Carlo % Cu</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Método </th>\n   <th style=\"text-align:left;\"> Valor calculado </th>\n   <th style=\"text-align:left;\"> u </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> GUM </td>\n   <td style=\"text-align:left;\"> 0.3484268 </td>\n   <td style=\"text-align:left;\"> 0.0060540 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Monte Carlo </td>\n   <td style=\"text-align:left;\"> 0.3484268 </td>\n   <td style=\"text-align:left;\"> 0.0060466 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nNote la excelente concordancia entre ambas metodologías **para esta\necuación de medición asumiendo una distribución normal para\ntodas las variables inputs**. En este caso, _muy particular_, casi sería\ninnecesario validar el método GUM, pero lo haremos de todas maneras\npara ejemplificar la operación.\n\n## Validación de los cálculos GUM con el método de Monte Carlo\n\nEn el \n[post anterior](https://www.analytical.cl/post/validacion-calculos-incertidumbre-quimica-analitica-metodo-monte-carlo/) \nhicimos el test de validación numérica \"a mano\", en \nesta oportunidad utilizaremos el comando `GUM.validate`. Lamentablemente\neste comando tiene una forma distinta de ingresar los parámetros, nada\ndel otro mundo, pero es distinta a `uncert`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Si bien GUM.validate tiene muchas opciones, utilizaremos aquellas\n# que están por defecto en la librería\n\n# Guarde en un vector el nombre de las variables, cada una entre ' '\nvariables <- c('Cu.calib', 'V', 'D', 'm')\n\n# Guarde en un vector x.i los valores de la variables input en el \n# mismo orden que ingresó 'variables' arriba\nx.i <- c(13.82, 250, 1, 0.9916)\n\n# Guarde en un vector u.i las incertidumbres estándar de las variables\n# input, en el mismo orden que ingresó 'variables' arriba\nu.i <- c(0.24, 0.14, 0, 0.00005)\n\n# Guarde los grados de libertad de cada variable input como nu.i. \n# En este ejemplo  asumiremos que todas tienen infinitos grados de \n# libertad (nu = 9999)\n\nnu.i <- c(9999, 9999, 9999, 9999)\n\n# Seleccione que tipo de método utilizó para evaluar cada una de las\n# incertidumbres: Tipo A o tipo B. En este caso sólo la incertidumbre\n# de calibración u.Cu.calib es de tipo A.\n\ntype <- c('A', 'B', 'B', 'B')\n\n# Seleccione que distribuciones de probabilidad asignó a las variables\n# input. En este ejemplo, asumiremos que todas son normales\n\ndistribution <- rep('Normal', 4) # Repetir Normal 4 veces (soy muy flojo)\n\n# Guarde la ecuación de medición entre ''\nec_de_medicion <- 'Cu.calib*V*D/(m*10000)'\n```\n:::\n\n\nListo, ahora validemos los cálculos GUM con el comando\n`GUM.validate`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(126) # Tu ya sabes\nGUM.validate(var.name = variables, \n             x.i = x.i,\n             u.i = u.i,\n             nu.i = nu.i,\n             type = type,\n             distribution = distribution,\n             measurement.fnc = ec_de_medicion)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.958\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\"Bueno ¿Y?\" se preguntará Ud. \n\nBien, para validar el método GUM frente a Monte Carlo, fíjese en el valor \nque entrega `GUM.validate = 0.958` y compárelo con 0.95. Si el valor de\n`GUM.validate` $> 0.95$ entonces el método GUM queda validado. \n\nEn el fondo, `GUM.validate` evalúa si el intervalo de incertidumbre calculado\npor GUM alcanza o no la cobertura esperada del 95% (teórica).\n\n## Resumiendo\n\n1. El método de Monte Carlo funciona en casos donde las suposiciones del \nmétodo GUM no se cumplen, especialmente en ecuaciones de medición no \nlineales.\n\n2. Mientras más divergencia de la linealidad tenga el modelo de medición, \nmás discrepancias habrá entre ambos métodos.\n\n3. Es posible que cuando incorpore distribuciones rectangulares (uniformes),\nel histograma de los valores de Monte Carlo esté dominado por este\ntipo de distribuciones. Verá un achatamiento del histograma.\n\n4. Ya hablamos que la pureza química (al menos para compuestos muy puros\n$> 95\\%$) no es correcto modelarla mediante una distribución Normal\n(¿$99.7 \\pm 0.5$ %?), sino\ncon una Beta. Lamentablmente, la librería `metRology`no posee esta distribución\nen sus opciones y tendrá que hacer la simulación \"a mano\". \n\n5. En general para distribuciones de Monte Carlos muy asimétricas (como la\npureza química modelada con Beta), la diferencia entre MC y GUM se verá\nreflejada en la incertidumbre expandida y no en la estándar.\n\n6. Quedan muchas cosas por analizar del método de Monte Carlo, sin embargo, el\nespíritu de este post es divulgar a la comunidad químico-analítica\nesta poderosa herramienta más que entrar en los detalles teóricos.\n\n7. Usamos el lenguaje `R`porque es actualmente el _idioma oficial_ de la \nestadística. Sin embargo, Ud. puede implementar estos cálculos en cualquier\nlenguaje e incluso en Excel. Además, existen muchos otros softwares que,\naunque no tan flexibles y potentes como `R`, harán el trabajo.\nRevise la siguiente lista en [Wikipedia](https://en.wikipedia.org/wiki/List_of_uncertainty_propagation_software).\n\nEspero que este post haya sido de su agrado, todos los comentarios\nson bienvenidos. Hasta la próxima.\n\n\n## Bibliografía\n\n1. Evaluation of measurement data – Guide to the expression of uncertainty in \nmeasurement JCGM 100:2008\n\n2. Evaluation of measurement data – Supplement 1 to the \"Guide to the expression \nof uncertainty in measurement\" – Propagation of distributions using a Monte Carlo \nmethod JCGM 101:2008\n\n3. Stephen L R Ellison _metRology: Support for Metrological Applications_\nR package version 0.9-23-2, 2016.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}